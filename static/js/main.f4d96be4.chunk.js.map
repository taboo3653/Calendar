{"version":3,"sources":["components/DayField.js","utils.js","context/EventsContext.js","context/SelectedMonthContext.js","context/EventFormStateContext.js","components/DaysContainer.js","components/MonthSelect.js","components/Search.js","components/EventForm/EventFormRead.js","components/EventForm/EventFormCreate.js","components/EventForm/EventForm.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["DayField","type","onClick","dayVal","fieldData","Text","Typography","className","strong","name","participants","MonthNames","EventsContext","createContext","SelectedMonthContext","EventFormStateContext","DayNames","DaysContainer","selectedMonth","useContext","events","showEventForm","fields","createDayFieldCompomnent","date","key","dayFields","length","getDate","find","item","getFullYear","getMonth","Date","tempDate","setDate","dayOfWeek","getDay","i","push","addPrevMonthFields","countDaysInCurrentMonth","year","month","addCurrentMonthFields","setMonth","addNextMonthFields","createFields","id","map","index","event","MonthSelect","props","setSelectedMonth","currentMonthName","currentYear","icon","size","Search","Input","searchRef","useRef","useState","searchValue","setSearchValue","top","left","searchItemsPos","setSearchItemsPos","useEffect","current","offsetTop","clientHeight","offsetLeft","width","clientWidth","items","filter","toLowerCase","includes","sort","a","b","ref","placeholder","style","value","onChange","e","target","toString","querySelector","EventFormRead","info","Title","deleteEvent","hideEventForm","level","description","EventFormCreate","TextArea","eventsContext","defaultName","defaultParticipants","defaultDescription","setName","setParticipants","setDescription","rows","updateEvent","addEvent","EventForm","eventFormState","currentTarget","isEdit","Calendar","setEvents","setEventFormState","JSON","parse","localStorage","getItem","setItem","stringify","Provider","elem","undefined","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4d96be4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography } from 'antd';\r\n\r\nconst DayField = ({ type, onClick, dayVal, fieldData }) => {\r\n\r\n    const {Text} = Typography;\r\n\r\n    return (<div\r\n        className={\"DayField \" + type}\r\n        onClick={onClick}>\r\n        <Text className=\"day-field_text\">{dayVal}</Text><br />\r\n        {fieldData\r\n            ? <>\r\n                <Text  strong className=\"day-field_text\">{fieldData.name}</Text><br />\r\n                <Text className=\"day-field_text\">{fieldData.participants}</Text>\r\n            </>\r\n            : \"\"}\r\n    </div>);\r\n}\r\n\r\nexport default DayField;\r\n","\r\nexport const MonthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n\r\nexport function getAbsoluteCoords(elem) {\r\n    let box = elem.getBoundingClientRect();\r\n\r\n    return {\r\n        top: box.top + window.pageYOffset,\r\n        left: box.left + window.pageXOffset,\r\n        right: box.right + window.pageXOffset,\r\n        bottom: box.bottom + window.pageYOffset,\r\n        width: elem.offsetWidth,\r\n        height: elem.offsetHeight\r\n\r\n    };\r\n\r\n    \r\n}\r\n\r\nexport function getCountDaysInMonts(year, month) {\r\n    let date = new Date(year, +month + 1, 0);\r\n    return date.getDate();\r\n}","import {createContext} from 'react'\r\n\r\nexport const EventsContext = createContext(); \r\n","import {createContext} from 'react'\r\n\r\nexport const SelectedMonthContext = createContext(); \r\n","import {createContext} from 'react'\r\n\r\nexport const EventFormStateContext = createContext(); \r\n","import React, { useContext } from 'react';\r\nimport DayField from './DayField';\r\nimport { getCountDaysInMonts } from '../utils';\r\nimport { EventsContext } from '../context/EventsContext';\r\nimport { SelectedMonthContext } from '../context/SelectedMonthContext';\r\nimport { EventFormStateContext } from '../context/EventFormStateContext';\r\n\r\n\r\nconst DayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\n\r\nexport default function DaysContainer() {\r\n\r\n    const { selectedMonth } = useContext(SelectedMonthContext);\r\n    const { events } = useContext(EventsContext);\r\n    const { showEventForm } = useContext(EventFormStateContext);\r\n    \r\n    const fields = createFields(selectedMonth);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"DayFieldsContainer\"\r\n                className=\"day-fields-container\">\r\n                {\r\n                    fields.map((item, index) => {\r\n                        return <DayField\r\n                            key={index}\r\n                            type={item.type}\r\n                            onClick={event => { showEventForm(/*event.currentTarget,*/ item.fieldData, item.date) }}\r\n                            dayVal={item.dayVal}\r\n                            fieldData={item.fieldData}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n         \r\n        </>\r\n    );\r\n\r\n    function createFields(selectedMonth) {\r\n\r\n\r\n        const addPrevMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n\r\n            tempDate.setDate(0); //ставим на последнее число предыдущего месяца\r\n            let dayOfWeek = tempDate.getDay() === 0 ? 7 : tempDate.getDay();\r\n            tempDate.setDate(tempDate.getDate() - dayOfWeek + 1); // ставим на понедельник\r\n\r\n            for (let i = 1; i <= dayOfWeek; i++) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldOtherMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n\r\n        }\r\n\r\n        const addCurrentMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n\r\n            tempDate.setDate(1);\r\n\r\n            let countDaysInCurrentMonth = getCountDaysInMonts(2019, tempDate.getMonth());\r\n\r\n            for (let i = 1; i <= countDaysInCurrentMonth; i++) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldCurrentMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n        }\r\n\r\n        const addNextMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n            tempDate.setMonth(tempDate.getMonth() + 1);\r\n            tempDate.setDate(1);\r\n\r\n            while (dayFields.length < 42) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldOtherMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n        }\r\n\r\n        const createDayFieldCompomnent = (date, type, key) => {\r\n            let dayVal;\r\n\r\n            key <= 7 ?\r\n                (dayVal = DayNames[dayFields.length] + \", \" + date.getDate()) :\r\n                dayVal = date.getDate();\r\n\r\n            const fieldData = events.find((item) => (\r\n                item.date.getFullYear() === date.getFullYear() &&\r\n                item.date.getMonth() === date.getMonth() &&\r\n                item.date.getDate() === date.getDate()\r\n            ));\r\n\r\n            const currentDate = new Date(date);\r\n\r\n            return {\r\n                date: currentDate, dayVal, type, fieldData\r\n            };\r\n        }\r\n\r\n        let dayFields = [];\r\n\r\n        addPrevMonthFields();\r\n        addCurrentMonthFields();\r\n        addNextMonthFields();\r\n\r\n        return dayFields;\r\n\r\n\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport {Button, Typography} from 'antd';\r\nimport { SelectedMonthContext } from '../context/SelectedMonthContext'\r\nimport { MonthNames } from \"../utils\";\r\n\r\nfunction MonthSelect(props) {\r\n\r\n    const {Text} = Typography; \r\n\r\n    const { selectedMonth, setSelectedMonth } = useContext(SelectedMonthContext);\r\n    let currentMonthName = MonthNames[selectedMonth.getMonth()];\r\n    let currentYear = selectedMonth.getFullYear();\r\n\r\n\r\n    const minusMonthHandler = () => {\r\n        selectedMonth.setMonth(selectedMonth.getMonth() - 1);\r\n        setSelectedMonth(new Date(selectedMonth));\r\n    }\r\n\r\n    const plusMonthHandler = () => {\r\n        selectedMonth.setMonth(selectedMonth.getMonth() + 1);\r\n        setSelectedMonth(new Date(selectedMonth));\r\n    }\r\n\r\n    return <div className=\"month-changer\">\r\n        <Button  icon=\"caret-left\" size = \"small\" onClick={minusMonthHandler} />\r\n        <Text strong className=\"month-changer_title\">{currentMonthName + \", \" + currentYear}</Text>\r\n        <Button  icon=\"caret-right\" size = \"small\" onClick={plusMonthHandler} />\r\n    </div>;\r\n}\r\n\r\nexport default MonthSelect;\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { Input, Typography } from 'antd';\r\nimport { EventsContext } from '../context/EventsContext';\r\nimport { EventFormStateContext } from '../context/EventFormStateContext';\r\nimport { MonthNames } from '../utils'\r\n\r\nfunction Search() {\r\n\r\n    const { Text } = Typography;\r\n    const { Search } = Input;\r\n    const searchRef = useRef(null);\r\n    const { events } = useContext(EventsContext);\r\n    const { showEventForm } = useContext(EventFormStateContext);\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const [searchItemsPos, setSearchItemsPos] = useState({\r\n        top: 0,\r\n        left: 0\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setSearchItemsPos({\r\n            top: searchRef.current.offsetTop + searchRef.current.clientHeight + 10,\r\n            left: searchRef.current.offsetLeft,\r\n            width: searchRef.current.clientWidth\r\n        });\r\n\r\n        //searchRef.current.querySelector(\"input\").addEventListener('blur', (e) => { setSearchValue(\"\") });\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n\r\n    const items = events.filter((item) => (\r\n        searchValue !== \"\" &&\r\n        (item.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            item.participants.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            (item.date.getDate() + \" \" + MonthNames[item.date.getMonth()]).toLowerCase().includes(searchValue.toLowerCase()))\r\n    ));\r\n\r\n    items.sort((a, b) => (a.date - b.date));\r\n\r\n\r\n    return (<div className=\"search\" ref={searchRef}>\r\n        <Search\r\n            placeholder=\"Event, date or participants\"\r\n            style={{ width: 220 }}\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value.toString())}\r\n        />\r\n        {(items.length > 0 &&\r\n            searchRef.current !== null &&\r\n            searchRef.current.querySelector(\"input:focus\")) ?\r\n            <div\r\n                className=\"search_items\"\r\n                style={searchItemsPos}\r\n            >\r\n                {items.map((item, index) => (\r\n                    <div\r\n                        className=\"search_items_item\"\r\n                        key={index}\r\n                        onClick={event => { showEventForm(item, item.date) }}\r\n                        >\r\n                        <Text strong>{item.name}</Text>\r\n                        <Text>{`${item.date.getDate()} ${MonthNames[item.date.getMonth()]}`}</Text>\r\n                    </div>)\r\n                )}\r\n            </div> :\r\n            \"\"\r\n        }\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Search;\r\n","import React, { useContext } from 'react';\r\nimport { Typography, Button } from 'antd';\r\nimport { MonthNames } from '../../utils'\r\nimport { EventsContext } from '../../context/EventsContext';\r\nimport { EventFormStateContext } from '../../context/EventFormStateContext';\r\n\r\nconst EventFormRead = ({ info }) => {\r\n    const { Title, Text } = Typography;\r\n    const { deleteEvent } = useContext(EventsContext);\r\n    const { showEventForm, hideEventForm } = useContext(EventFormStateContext);\r\n\r\n\r\n    return (<div className=\"event-form_read\">\r\n        <Title level={4}>{info.name}</Title>\r\n        <Text className=\"event-form_read_date\">{`${info.date.getDate()} ${MonthNames[info.date.getMonth()]}`}</Text>\r\n        <div className=\"event-form_read_participants\">\r\n            <Text type=\"secondary\" className=\"event-form_read_participants_title\">Participants:</Text>\r\n            <Text>{info.participants}</Text>\r\n        </div>\r\n        <Text className=\"event-form_read_description\">\r\n            <Text className=\"event-form_read_description_title\">Description:</Text>\r\n            <Text>{info.description}</Text>\r\n        </Text>\r\n\r\n        <div className=\"event-form_buttons\" >\r\n            <Button size=\"small\"\r\n                onClick={() => {\r\n                    showEventForm(info, info.date, true);\r\n                }}\r\n            >Edit</Button>\r\n            <Button size=\"small\"\r\n                onClick={() => {\r\n                    deleteEvent(info);\r\n                    hideEventForm();\r\n                }}>Delete</Button>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default EventFormRead;","import React, { useState, useContext } from 'react';\r\nimport { EventsContext } from \"../../context/EventsContext\"\r\nimport { EventFormStateContext } from \"../../context/EventFormStateContext\"\r\n\r\nimport { Input, Button} from 'antd';\r\n\r\nconst EventFormCreate = ({ info = {}, date }) => {\r\n\r\n    const { TextArea } = Input;\r\n\r\n    const eventsContext = useContext(EventsContext);\r\n    const { hideEventForm } = useContext(EventFormStateContext);\r\n\r\n    const { id = 0, name: defaultName = \"\", participants: defaultParticipants = \"\", description: defaultDescription = \"\" } = info;\r\n\r\n\r\n    const [name, setName] = useState(defaultName);\r\n    const [participants, setParticipants] = useState(defaultParticipants);\r\n    const [description, setDescription] = useState(defaultDescription);\r\n\r\n\r\n\r\n    const handleSave = () => {\r\n        id ?\r\n            eventsContext.updateEvent({\r\n                id, date, name, participants, description\r\n            }) :\r\n            eventsContext.addEvent({\r\n                date, name, participants, description\r\n            });\r\n\r\n        hideEventForm();\r\n    }\r\n\r\n\r\n    return (<div className=\"event-form_create\">\r\n\r\n            <div className=\"event-form_create_inputs\">\r\n                    <Input\r\n                        placeholder=\"Event name\"\r\n                        value={name}\r\n                        onChange={(e) => (setName(e.target.value))}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Names of participants\"\r\n                        value={participants}\r\n                        onChange={(e) => (setParticipants(e.target.value))}\r\n                    />\r\n            </div>\r\n            <TextArea rows={4}\r\n                placeholder=\"Description\"\r\n                value={description}\r\n                onChange={(e) => (setDescription(e.target.value))} />\r\n            <div className=\"event-form_buttons\" >\r\n                    <Button onClick={handleSave} type=\"primary\" size=\"small\">Save</Button>\r\n            </div>\r\n           \r\n    </div>);\r\n}\r\n\r\nexport default EventFormCreate;","import React, { useContext } from 'react';\r\nimport { Icon } from 'antd';\r\n\r\n//import SelectedDateContext from '../../context/SelectedDateContext';\r\nimport EventFormRead from './EventFormRead';\r\nimport EventFormCreate from './EventFormCreate';\r\n\r\nimport { EventFormStateContext } from '../../context/EventFormStateContext';\r\n\r\n\r\nfunction EventForm({ eventFormState }) {\r\n    /*\r\n        const getPosition = () => {\r\n            const position = {};\r\n            if (target) {\r\n    \r\n                const containerCoords = getAbsoluteCoords(document.getElementById(\"DayFieldsContainer\"));\r\n                const eventFormCoords = {\r\n                    width: eventFormRef.current.clientWidth,\r\n                    height: eventFormRef.current.clientHeight\r\n                };\r\n                const targetCoords = getAbsoluteCoords(target.domElement);\r\n                const margin = 10;\r\n    \r\n                if (+targetCoords.right + +eventFormCoords.width < containerCoords.right)\r\n                    position.left = targetCoords.right + margin;\r\n                else\r\n                    position.left = targetCoords.left - eventFormCoords.width - margin;\r\n    \r\n                if (+targetCoords.top + +eventFormCoords.height < containerCoords.bottom)\r\n                    position.top = targetCoords.top - margin;\r\n                else\r\n                    position.top = containerCoords.bottom - eventFormCoords.height + margin;\r\n            }\r\n    \r\n            return position;\r\n        }\r\n    */\r\n    const { hideEventForm } = useContext(EventFormStateContext);\r\n\r\n    /*\r\n    const cls = [\"event-form\"];\r\n    if (!eventFormState.target)\r\n        cls.push(\"hidden\");*/\r\n\r\n    const target = eventFormState.target;\r\n    /*\r\n        const eventFormRef = useRef(null);\r\n        useEffect(()=>{\r\n            setFormPosition(getPosition());\r\n        },[target])*/\r\n\r\n    return (\r\n        <div className=\"modal\"\r\n            onClick={(e) => {\r\n                if (e.currentTarget === e.target)\r\n                    hideEventForm();\r\n            }}>\r\n            <div className=\"event-form\">\r\n                {<Icon\r\n                    type=\"close\"\r\n                    className=\"event-form_close-button\"\r\n                    onClick={hideEventForm} />}\r\n\r\n                {(target.isEdit) ?\r\n                     <EventFormCreate info={target.info} date = {target.date}  /> :\r\n                     <EventFormRead info={target.info}  />\r\n                    }\r\n\r\n            </div>\r\n        </div>);\r\n}\r\n\r\n\r\nexport default EventForm;","import React, { useState,useEffect } from 'react';\r\nimport DaysContainer from './DaysContainer.js';\r\nimport MonthSelect from './MonthSelect.js';\r\nimport Search from './Search.js';\r\nimport { SelectedMonthContext } from '../context/SelectedMonthContext';\r\nimport { EventsContext } from '../context/EventsContext';\r\nimport { EventFormStateContext } from '../context/EventFormStateContext';\r\n\r\nimport EventForm from './EventForm/EventForm';\r\n\r\n\r\nfunction Calendar(props) {\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\r\n\r\n  const [events, setEvents] = useState([]);\r\n\r\n\r\n  const deleteEvent = (event) => {\r\n    setEvents(events.filter((item) => (item !== event)));\r\n  }\r\n\r\n  const addEvent = ({ date, name, participants = \"\", description = \"\" }) => {\r\n\r\n    setEvents([...events, {\r\n      id: +events.length + 1,\r\n      date, name, participants, description\r\n    }\r\n    ]);\r\n  }\r\n\r\n  const updateEvent = ({ id, date, name, participants, description }) => {\r\n    const elem = events.find((item) => (item.id === id));\r\n    elem.date = date;\r\n    elem.name = name;\r\n    elem.participants = participants;\r\n    elem.description = description;\r\n\r\n    setEvents(events);\r\n  }\r\n\r\n\r\n  const [eventFormState, setEventFormState] = useState({\r\n    target: null,\r\n  });\r\n\r\n  const showEventForm = (info, date, isEdit = false) => {\r\n\r\n    setEventFormState({\r\n      ...eventFormState,\r\n      target: {\r\n        info: info,\r\n        date: date,\r\n        isEdit: (isEdit || info === undefined),\r\n      }\r\n    });\r\n  }\r\n\r\n  const hideEventForm = () => {\r\n    setEventFormState({\r\n      ...eventFormState,\r\n      target: null,\r\n    });\r\n  }\r\n\r\n  useEffect (() =>{\r\n    const events = JSON.parse(localStorage.getItem('events') , (key, value)=>{\r\n      if(key === \"date\")\r\n        return new Date(value);\r\n\r\n      return value;\r\n    }) || [];\r\n\r\n    setEvents(events);\r\n  },[]);\r\n\r\n  \r\n  useEffect (() =>{\r\n    localStorage.setItem('events',JSON.stringify(events));\r\n  },[events]);\r\n\r\n  return (\r\n\r\n    <EventsContext.Provider value={{\r\n      events, setEvents,\r\n      deleteEvent, addEvent, updateEvent\r\n    }}>\r\n      <EventFormStateContext.Provider value={{\r\n        eventFormState,\r\n        hideEventForm, showEventForm\r\n      }}>\r\n        <SelectedMonthContext.Provider value={{\r\n          selectedMonth, setSelectedMonth\r\n        }}>\r\n          <div className=\"calendar\">\r\n            <div className=\"header\">\r\n              <MonthSelect />\r\n              <Search />\r\n            </div>\r\n            <DaysContainer />\r\n            {(eventFormState.target) ?\r\n              <EventForm\r\n                eventFormState={eventFormState}\r\n              /> :\r\n              \"\"\r\n            }\r\n          </div>\r\n        </SelectedMonthContext.Provider>\r\n      </EventFormStateContext.Provider>\r\n    </EventsContext.Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\nimport Calendar from './components/Calendar';\nimport 'antd/dist/antd.css';\nimport './App.scss';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}