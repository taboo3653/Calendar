{"version":3,"sources":["components/DayField.js","utils.js","redux/actions/eventForm.js","containers/DaysContainer.js","containers/MonthSelect.js","redux/actions/selectedMonth.js","containers/EventForm/EventFormRead.js","redux/actions/events.js","containers/EventForm/EventFormCreate.js","containers/EventForm/EventForm.js","containers/Search.js","containers/Calendar.js","redux/reducers/events.js","redux/reducers/eventForm.js","redux/reducers/selectedMonth.js","redux/reducers/index.js","redux/store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["DayField","type","onClick","dayVal","fieldData","Text","Typography","className","strong","name","participants","MonthNames","showEventForm","info","date","isEdit","payload","undefined","hideEventForm","DayNames","connect","events","selectedMonth","fields","createDayFieldCompomnent","key","dayFields","length","getDate","find","item","getFullYear","getMonth","Date","tempDate","setDate","dayOfWeek","getDay","i","push","addPrevMonthFields","countDaysInCurrentMonth","year","month","addCurrentMonthFields","setMonth","addNextMonthFields","createFields","map","index","store","plusMonth","minusMonth","currentMonthName","currentYear","icon","size","deleteEvent","event","Title","level","description","addEvent","updateEvent","id","TextArea","Input","defaultName","defaultParticipants","defaultDescription","useState","setName","setParticipants","setDescription","placeholder","value","onChange","e","target","rows","eventForm","currentTarget","Search","searchRef","useRef","searchValue","setSearchValue","top","left","searchItemsPos","setSearchItemsPos","useEffect","current","offsetTop","clientHeight","offsetLeft","width","clientWidth","items","filter","toLowerCase","includes","sort","a","b","ref","style","toString","querySelector","initialState","JSON","parse","localStorage","getItem","combineReducers","state","action","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","App","subscribe","getState","setItem","stringify","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e38ec78.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DayField = ({ type, onClick, dayVal, fieldData }) => {\r\n\r\n    const {Text} = Typography;\r\n\r\n    return (<div\r\n        className={\"day-field \" + type}\r\n        onClick={onClick}>\r\n        <Text className=\"day-field_text\">{dayVal}</Text><br />\r\n        {fieldData\r\n            ? <>\r\n                <Text  strong className=\"day-field_text\">{fieldData.name}</Text><br />\r\n                <Text className=\"day-field_text\">{fieldData.participants}</Text>\r\n            </>\r\n            : \"\"}\r\n    </div>);\r\n}\r\n\r\nDayField.propTypes = {\r\n        type: PropTypes.string,\r\n        onClick: PropTypes.func,\r\n        dayVal: PropTypes.node,\r\n        fieldData: PropTypes.shape ({\r\n            name: PropTypes.node,\r\n            participants: PropTypes.node\r\n        })\r\n}\r\n\r\nexport default DayField;\r\n","\r\nexport const MonthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n\r\nexport function getAbsoluteCoords(elem) {\r\n    let box = elem.getBoundingClientRect();\r\n\r\n    return {\r\n        top: box.top + window.pageYOffset,\r\n        left: box.left + window.pageXOffset,\r\n        right: box.right + window.pageXOffset,\r\n        bottom: box.bottom + window.pageYOffset,\r\n        width: elem.offsetWidth,\r\n        height: elem.offsetHeight\r\n\r\n    };\r\n\r\n    \r\n}\r\n\r\nexport function getCountDaysInMonts(year, month) {\r\n    let date = new Date(year, +month + 1, 0);\r\n    return date.getDate();\r\n}","export const SHOW = \"SHOW\";\r\nexport const HIDE = \"HIDE\";\r\n\r\nexport const showEventForm = (info, date, isEdit = false) => (\r\n    {\r\n        type: SHOW,\r\n        payload: {info, date, isEdit: (isEdit || info === undefined)}\r\n    }\r\n)\r\n\r\nexport const hideEventForm = () => (\r\n    {\r\n        type: HIDE,\r\n    }\r\n)\r\n","import React from 'react';\r\nimport DayField from '../components/DayField';\r\nimport { getCountDaysInMonts } from '../utils';\r\nimport { showEventForm } from \"../redux/actions/eventForm\"\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst DayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\n\r\nconst DaysContainer = ({events, selectedMonth, showEventForm}) => {\r\n\r\n    \r\n    const fields = createFields(selectedMonth);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"day-fields-container\">\r\n                {\r\n                    fields.map((item, index) => {\r\n                        return <DayField\r\n                            key={index}\r\n                            \r\n                            type={item.type}\r\n                            onClick={() => { showEventForm(item.fieldData, item.date) }}\r\n                            dayVal={item.dayVal}\r\n                            fieldData={item.fieldData}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n         \r\n        </>\r\n    );\r\n\r\n    function createFields(selectedMonth) {\r\n\r\n\r\n        const addPrevMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n\r\n            tempDate.setDate(0); //ставим на последнее число предыдущего месяца\r\n            let dayOfWeek = tempDate.getDay() === 0 ? 7 : tempDate.getDay();\r\n            tempDate.setDate(tempDate.getDate() - dayOfWeek + 1); // ставим на понедельник\r\n\r\n            for (let i = 1; i <= dayOfWeek; i++) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldOtherMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n\r\n        }\r\n\r\n        const addCurrentMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n\r\n            tempDate.setDate(1);\r\n\r\n            let countDaysInCurrentMonth = getCountDaysInMonts(2019, tempDate.getMonth());\r\n\r\n            for (let i = 1; i <= countDaysInCurrentMonth; i++) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldCurrentMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n        }\r\n\r\n        const addNextMonthFields = () => {\r\n            let tempDate = new Date(selectedMonth);\r\n            tempDate.setMonth(tempDate.getMonth() + 1);\r\n            tempDate.setDate(1);\r\n\r\n            while (dayFields.length < 42) {\r\n                dayFields.push(createDayFieldCompomnent(tempDate, \"DayFieldOtherMonth\", dayFields.length + 1));\r\n                tempDate.setDate(tempDate.getDate() + 1);\r\n            }\r\n        }\r\n\r\n        const createDayFieldCompomnent = (date, type, key) => {\r\n            let dayVal;\r\n\r\n            key <= 7 ?\r\n                (dayVal = DayNames[dayFields.length] + \", \" + date.getDate()) :\r\n                dayVal = date.getDate();\r\n\r\n            const fieldData = events.find((item) => (\r\n                item.date.getFullYear() === date.getFullYear() &&\r\n                item.date.getMonth() === date.getMonth() &&\r\n                item.date.getDate() === date.getDate()\r\n            ));\r\n\r\n            const currentDate = new Date(date);\r\n\r\n            return {\r\n                date: currentDate, dayVal, type, fieldData\r\n            };\r\n        }\r\n\r\n        let dayFields = [];\r\n\r\n        addPrevMonthFields();\r\n        addCurrentMonthFields();\r\n        addNextMonthFields();\r\n\r\n        return dayFields;\r\n\r\n\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    ({events, selectedMonth}) => ({\r\n        events: events,\r\n        selectedMonth: selectedMonth\r\n    }), {showEventForm}\r\n)(DaysContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Typography} from 'antd';\r\nimport { MonthNames } from \"../utils\";\r\nimport { connect } from 'react-redux'\r\nimport { plusMonth, minusMonth } from '../redux/actions/selectedMonth'\r\n\r\nconst MonthSelect = ({plusMonth,minusMonth, selectedMonth}) => {\r\n\r\n    const {Text} = Typography; \r\n\r\n    let currentMonthName = MonthNames[selectedMonth.getMonth()];\r\n    let currentYear = selectedMonth.getFullYear();\r\n\r\n\r\n    return <div className=\"month-changer\">\r\n        <Button  icon=\"caret-left\" size = \"small\" onClick={minusMonth} />\r\n        <Text strong className=\"month-changer_title\">{currentMonthName + \", \" + currentYear}</Text>\r\n        <Button  icon=\"caret-right\" size = \"small\" onClick={plusMonth} />\r\n    </div>;\r\n}\r\n\r\nexport default connect((store) => ({\r\n    selectedMonth: store.selectedMonth\r\n}),{plusMonth,minusMonth})(MonthSelect);\r\n","export const PLUS_MONTH = \"PLUS_MONTH\";\r\nexport const MINUS_MONTH = \"MINUS_MONTH\";\r\n\r\n\r\nexport const plusMonth = () => (\r\n    {\r\n        type: PLUS_MONTH,\r\n    }\r\n)\r\n\r\nexport const minusMonth = () => (\r\n    {\r\n        type: MINUS_MONTH,\r\n    }\r\n)","import React from 'react';\r\nimport { Typography, Button } from 'antd';\r\nimport { MonthNames } from '../../utils'\r\nimport { connect } from 'react-redux'\r\nimport { deleteEvent } from \"../../redux/actions/events\"\r\nimport { hideEventForm, showEventForm } from \"../../redux/actions/eventForm\"\r\n\r\n\r\nconst EventFormRead = ({ info, deleteEvent, showEventForm, hideEventForm }) => {\r\n    const { Title, Text } = Typography;\r\n\r\n\r\n    return (<div className=\"event-form_read\">\r\n        <Title level={4}>{info.name}</Title>\r\n        <Text className=\"event-form_read_date\">{`${info.date.getDate()} ${MonthNames[info.date.getMonth()]}`}</Text>\r\n        <div className=\"event-form_read_participants\">\r\n            <Text type=\"secondary\" className=\"event-form_read_participants_title\">Participants:</Text>\r\n            <Text>{info.participants}</Text>\r\n        </div>\r\n        <Text className=\"event-form_read_description\">\r\n            <Text className=\"event-form_read_description_title\">Description:</Text>\r\n            <Text>{info.description}</Text>\r\n        </Text>\r\n\r\n        <div className=\"event-form_buttons\" >\r\n            <Button size=\"small\"\r\n                onClick={() => {\r\n                    showEventForm(info, info.date, true);\r\n                }}\r\n            >Edit</Button>\r\n            <Button size=\"small\"\r\n                onClick={() => {                    \r\n                    deleteEvent(info);\r\n                    hideEventForm();\r\n                }}>Delete</Button>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default connect(null, {deleteEvent, showEventForm, hideEventForm})(EventFormRead);","export const ADD = \"ADD\";\r\nexport const DELETE = \"DELETE\";\r\nexport const UPDATE = \"UPDATE\";\r\n\r\nexport const addEvent = (date, name, participants, description) => (\r\n    {\r\n        type: ADD,\r\n        payload: {date, name, participants, description}\r\n    }\r\n)\r\n\r\n\r\nexport const deleteEvent = (event) => (\r\n    {\r\n        type: DELETE,\r\n        payload: event,\r\n    }\r\n)\r\n\r\nexport const updateEvent = (id, date, name, participants, description) => (\r\n    {\r\n        type: UPDATE,\r\n        payload: {id, date, name, participants, description}\r\n    }\r\n)","import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addEvent, updateEvent } from \"../../redux/actions/events\"\r\nimport { hideEventForm } from \"../../redux/actions/eventForm\"\r\n\r\nimport { Input, Button } from 'antd';\r\n\r\nconst EventFormCreate = ({ info = {}, date, addEvent, updateEvent, hideEventForm }) => {\r\n\r\n    const { TextArea } = Input;\r\n\r\n\r\n    const { id = 0, name: defaultName = \"\", participants: defaultParticipants = \"\", description: defaultDescription = \"\" } = info;\r\n\r\n\r\n    const [name, setName] = useState(defaultName);\r\n    const [participants, setParticipants] = useState(defaultParticipants);\r\n    const [description, setDescription] = useState(defaultDescription);\r\n\r\n\r\n\r\n    const handleSave = () => {\r\n        (id) ?\r\n            updateEvent(id, date, name, participants, description) :\r\n            addEvent(date, name, participants, description)\r\n\r\n        hideEventForm();\r\n    }\r\n\r\n\r\n    return (<div className=\"event-form_create\">\r\n\r\n        <div className=\"event-form_create_inputs\">\r\n            <Input\r\n                placeholder=\"Event name\"\r\n                value={name}\r\n                onChange={(e) => (setName(e.target.value))}\r\n            />\r\n            <Input\r\n                placeholder=\"Names of participants\"\r\n                value={participants}\r\n                onChange={(e) => (setParticipants(e.target.value))}\r\n            />\r\n        </div>\r\n        <TextArea rows={4}\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={(e) => (setDescription(e.target.value))} />\r\n        <div className=\"event-form_buttons\" >\r\n            <Button onClick={handleSave} type=\"primary\" size=\"small\">Save</Button>\r\n        </div>\r\n\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { addEvent, updateEvent, hideEventForm })(EventFormCreate);","import React from 'react';\r\nimport { Icon } from 'antd';\r\n\r\nimport EventFormRead from './EventFormRead';\r\nimport EventFormCreate from './EventFormCreate';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { hideEventForm } from '../../redux/actions/eventForm'\r\n\r\nfunction EventForm({ eventForm, hideEventForm }) {\r\n   \r\n    const target = eventForm.target;\r\n  \r\n\r\n    return (\r\n        <div className=\"modal\"\r\n            onClick={(e) => {\r\n                if (e.currentTarget === e.target)\r\n                    hideEventForm();\r\n            }}>\r\n            <div className=\"event-form\">\r\n                {<Icon\r\n                    type=\"close\"\r\n                    className=\"event-form_close-button\"\r\n                    onClick={hideEventForm} />}\r\n\r\n                {(target.isEdit) ?\r\n                     <EventFormCreate info={target.info} date = {target.date}  /> :\r\n                     <EventFormRead info={target.info}  />\r\n                    }\r\n\r\n            </div>\r\n        </div>);\r\n}\r\n\r\n\r\nexport default connect(\r\n    (store) =>({\r\n        eventForm : store.eventForm\r\n    })\r\n    ,{ hideEventForm })(EventForm);","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Input, Typography } from 'antd';\r\nimport { MonthNames } from '../utils'\r\nimport { connect } from 'react-redux'\r\nimport { showEventForm } from \"../redux/actions/eventForm\"\r\n\r\n\r\nfunction Search({events, showEventForm}) {\r\n\r\n    const { Text } = Typography;\r\n    const { Search } = Input;\r\n    const searchRef = useRef(null);\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const [searchItemsPos, setSearchItemsPos] = useState({\r\n        top: 0,\r\n        left: 0\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setSearchItemsPos({\r\n            top: searchRef.current.offsetTop + searchRef.current.clientHeight + 10,\r\n            left: searchRef.current.offsetLeft,\r\n            width: searchRef.current.clientWidth\r\n        });\r\n\r\n        //searchRef.current.querySelector(\"input\").addEventListener('blur', (e) => { setSearchValue(\"\") });\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n\r\n    const items = events.filter((item) => (\r\n        searchValue !== \"\" &&\r\n        (item.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            item.participants.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            (item.date.getDate() + \" \" + MonthNames[item.date.getMonth()]).toLowerCase().includes(searchValue.toLowerCase()))\r\n    ));\r\n\r\n    items.sort((a, b) => (a.date - b.date));\r\n\r\n\r\n    return (<div className=\"search\" ref={searchRef}>\r\n        <Search\r\n            placeholder=\"Event, date or participants\"\r\n            style={{ width: 220 }}\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value.toString())}\r\n        />\r\n        {(items.length > 0 &&\r\n            searchRef.current !== null &&\r\n            searchRef.current.querySelector(\"input:focus\")) ?\r\n            <div\r\n                className=\"search_items\"\r\n                style={searchItemsPos}\r\n            >\r\n                {items.map((item, index) => (\r\n                    <div\r\n                        className=\"search_items_item\"\r\n                        key={index}\r\n                        onClick={event => { \r\n                            showEventForm(item, item.date); \r\n                            setSearchValue(\"\");\r\n                        }}\r\n                        >\r\n                        <Text strong>{item.name}</Text>\r\n                        <Text>{`${item.date.getDate()} ${MonthNames[item.date.getMonth()]}`}</Text>\r\n                    </div>)\r\n                )}\r\n            </div> :\r\n            \"\"\r\n        }\r\n\r\n    </div>);\r\n}\r\n\r\nexport default connect(\r\n    ({events}) => ({\r\n        events: events\r\n    }),{showEventForm}\r\n    )(Search);\r\n","import React from 'react';\r\nimport DaysContainer from './DaysContainer';\r\nimport MonthSelect from './MonthSelect';\r\nimport EventForm from './EventForm/EventForm';\r\nimport Search from './Search';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Calendar = ({eventForm}) => {\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"header\">\r\n        <MonthSelect />\r\n        <Search />\r\n      </div>\r\n      <DaysContainer />\r\n      {\r\n        \r\n        (eventForm.target) ?\r\n          <EventForm /> :\r\n          \"\"\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  ({ eventForm }) =>({\r\n    eventForm: eventForm\r\n  })\r\n)(Calendar);\r\n","import { ADD, UPDATE, DELETE } from '../actions/events'\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('events'), (key, value) => {\r\n    if (key === \"date\")\r\n        return new Date(value);\r\n\r\n    return value;\r\n}) || [];\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD:\r\n            return [...state, { id: state.length + 1, ...action.payload }];\r\n\r\n        case UPDATE:\r\n            return state.map((item) => {\r\n                console.log(action.payload.id)\r\n                return (item.id === action.payload.id) ?\r\n                    action.payload :\r\n                    item;\r\n            });\r\n\r\n\r\n        case DELETE:\r\n            return state.filter((item) => (item.id !== action.payload.id));\r\n\r\n        default: return state;\r\n    }\r\n}","import { SHOW,HIDE } from '../actions/eventForm'\r\n\r\nconst initialState = {\r\n    target: null\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n     \r\n        case SHOW: return {...state, target: action.payload};\r\n        case HIDE: return {...state, target: null};\r\n\r\n       \r\n        default: return state;\r\n    }\r\n}","import { PLUS_MONTH, MINUS_MONTH } from '../actions/selectedMonth'\r\n\r\nconst initialState = new Date();\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n     \r\n        case PLUS_MONTH: return new Date(state.setMonth(state.getMonth() + 1));\r\n        case MINUS_MONTH: return  new Date(state.setMonth(state.getMonth() - 1));\r\n        default: return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport events from './events';\r\nimport eventForm from './eventForm';\r\nimport selectedMonth from './selectedMonth';\r\n\r\n\r\nexport default combineReducers ( {\r\n    events, eventForm, selectedMonth\r\n});\r\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from '../reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore( rootReducer, composeEnhancers());","import React from 'react';\nimport Calendar from './containers/Calendar';\nimport 'antd/dist/antd.css';\nimport './App.scss';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store/configureStore';\n\nfunction App() {\n \n  store.subscribe(() => {\n    const { events } = store.getState();\n    localStorage.setItem('events', JSON.stringify(events));\n  }\n  );\n\n  return (\n    <Provider store = {store}>\n      <div className=\"App\">\n        <Calendar />\n      </div>\n      </Provider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}